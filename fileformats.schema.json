{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "actions",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "*": {
      "description": "An Action object that contains ground rules for all files.",
      "$ref": "#/definitions/action"
    },
    "!empty": {
      "description": "An Action object for empty files.",
      "$ref": "#/definitions/action"
    },
    "!binary": {
      "description": "An Action object for the file class 'binary'.",
      "$ref": "#/definitions/action"
    },
    "!aggregate": {
      "description": "An Action object for the file class 'aggregate'.",
      "$ref": "#/definitions/action"
    },
    "!audio": {
      "description": "An Action object for the file class 'audio'.",
      "$ref": "#/definitions/action"
    },
    "!database": {
      "description": "An Action object for the file class 'database'.",
      "$ref": "#/definitions/action"
    },
    "!dataset": {
      "description": "An Action object for the file class 'dataset'.",
      "$ref": "#/definitions/action"
    },
    "!email": {
      "description": "An Action object for the file class 'email'.",
      "$ref": "#/definitions/action"
    },
    "!font": {
      "description": "An Action object for the file class 'font'.",
      "$ref": "#/definitions/action"
    },
    "!gis": {
      "description": "An Action object for the file class 'gis'.",
      "$ref": "#/definitions/action"
    },
    "!image (raster)": {
      "description": "An Action object for the file class 'image (raster)'.",
      "$ref": "#/definitions/action"
    },
    "!image (vector)": {
      "description": "An Action object for the file class 'image (vector)'.",
      "$ref": "#/definitions/action"
    },
    "!model": {
      "description": "An Action object for the file class 'model'.",
      "$ref": "#/definitions/action"
    },
    "!page description": {
      "description": "An Action object for the file class 'page description'.",
      "$ref": "#/definitions/action"
    },
    "!presentation": {
      "description": "An Action object for the file class 'presentation'.",
      "$ref": "#/definitions/action"
    },
    "!spreadsheet": {
      "description": "An Action object for the file class 'spreadsheet'.",
      "$ref": "#/definitions/action"
    },
    "!text (mark-up)": {
      "description": "An Action object for the file class 'text (mark-up)'.",
      "$ref": "#/definitions/action"
    },
    "!text (structured)": {
      "description": "An Action object for the file class 'text (structured)'.",
      "$ref": "#/definitions/action"
    },
    "!text (unstructured)": {
      "description": "An Action object for the file class 'text (unstructured)'.",
      "$ref": "#/definitions/action"
    },
    "!video": {
      "description": "An Action object for the file class 'video'.",
      "$ref": "#/definitions/action"
    },
    "!word processor": {
      "description": "An Action object for the file class 'word processor'.",
      "$ref": "#/definitions/action"
    }
  },
  "patternProperties": {
    "^[a-zA-Z0-9_/-]+$": {
      "$ref": "#/definitions/action"
    },
    "!ext=(\\.\\w+)+": {
      "$ref": "#/definitions/action"
    }
  },
  "definitions": {
    "action": {
      "description": "An Action object.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "action"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "action": {
                "const": "convert"
              }
            }
          },
          "then": {
            "required": [
              "convert"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "extract"
              }
            }
          },
          "then": {
            "required": [
              "extract"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "template"
              }
            }
          },
          "then": {
            "required": [
              "template"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "manual"
              }
            }
          },
          "then": {
            "required": [
              "manual"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "rename"
              }
            }
          },
          "then": {
            "required": [
              "rename"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "ignore"
              }
            }
          },
          "then": {
            "required": [
              "ignore"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "action": {
                "const": "reidentify"
              }
            }
          },
          "then": {
            "required": [
              "reidentify"
            ]
          }
        }
      ],
      "properties": {
        "name": {
          "description": "The long name of the file format.",
          "type": "string"
        },
        "description": {
          "description": "A description of the file format.",
          "type": "string"
        },
        "alternatives": {
          "description": "Alternative PUIDs based on the file's extension.",
          "type": "object",
          "minItems": 3,
          "additionalProperties": false,
          "patternProperties": {
            "^(\\.[a-z0-9]+)+$": {
              "oneOf": [
                {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_/-]+$"
                },
                {
                  "type": "string",
                  "pattern": "^!ext=(\\.+)+$"
                },
                {
                  "type": "string",
                  "enum": [
                    "!empty",
                    "!binary",
                    "!aggregate",
                    "!audio",
                    "!database",
                    "!dataset",
                    "!email",
                    "!font",
                    "!gis",
                    "!image (raster)",
                    "!image (vector)",
                    "!model",
                    "!page description",
                    "!presentation",
                    "!spreadsheet",
                    "!text (mark-up)",
                    "!text (structured)",
                    "!text (unstructured)",
                    "!video",
                    "!word processor"
                  ]
                }
              ]
            }
          }
        },
        "ignore_if": {
          "description": "The conditions that need to apply in order to ignore the file.",
          "type": "object",
          "properties": {
            "image_pixels_min": {
              "description": "The minimum total size of the image in pixels (width * height). Only applies to image files.",
              "type": "integer",
              "minimum": 1
            },
            "image_width_min": {
              "description": "The minimum width of the image in pixels. Only applies to image files.",
              "type": "integer",
              "minimum": 1
            },
            "image_height_min": {
              "description": "The minimum height of the image in pixels. Only applies to image files.",
              "type": "integer",
              "minimum": 1
            },
            "size_min": {
              "description": "The minimum size of the file in bytes.",
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "action": {
          "description": "The default action to undertake.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "enum": [
                "convert",
                "extract",
                "template",
                "manual",
                "ignore"
              ]
            }
          ]
        },
        "convert": {
          "description": "Instructions to convert the file.",
          "type": "object",
          "required": [
            "tool"
          ],
          "if": {
            "properties": {
              "tool": {
                "not": {
                  "enum": [
                    "copy"
                  ]
                }
              }
            }
          },
          "then": {
            "required": [
              "outputs"
            ]
          },
          "properties": {
            "tool": {
              "description": "The converter tool to use.",
              "type": "string"
            },
            "outputs": {
              "description": "A list of extension targets for the converter.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(.[a-z0-9]+)+$"
              },
              "minItems": 1
            }
          }
        },
        "extract": {
          "description": "Instructions to extract an archive file.",
          "type": "object",
          "required": [
            "tool",
            "extension"
          ],
          "properties": {
            "tool": {
              "description": "The extraction tool to use.",
              "type": "string"
            },
            "extension": {
              "description": "The extension the file must have for the tool to process it.",
              "type": "string"
            },
            "on_success": {
              "description": "The action to switch to once the file is extracted, defaults to ignore.",
              "type": "string",
              "enum": [
                "convert",
                "template",
                "manual",
                "ignore"
              ]
            }
          }
        },
        "manual": {
          "description": "Instructions to manually process a file.",
          "type": "object",
          "required": [
            "reason",
            "process"
          ],
          "properties": {
            "reason": {
              "description": "The reason why the file should be manually processed.",
              "type": "string"
            },
            "process": {
              "description": "The steps to take to manually process the file.",
              "type": "string"
            }
          }
        },
        "rename": {
          "description": "Instructions to change the extension of a file.",
          "type": "object",
          "required": [
            "extension"
          ],
          "properties": {
            "extension": {
              "description": "The new file extension.",
              "type": "string",
              "pattern": "^(\\.[^.]+)+$"
            },
            "append": {
              "description": "Whether to append the new extension to existing ones.",
              "type": "boolean"
            },
            "on_extension_mismatch": {
              "description": "Whether to only apply the action if the file has an extension mismatch warning.",
              "type": "boolean"
            }
          }
        },
        "reidentify": {
          "description": "Instructions to re-identify a file format using custom signatures.",
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "description": "The reason why the file should be re-identified.",
              "type": "string"
            },
            "on_fail": {
              "description": "The action to take if no new signature can be found.",
              "type": "string",
              "enum": [
                "action",
                "null"
              ]
            }
          }
        },
        "ignore": {
          "description": "Instructions to ignore a file format and replace it with a template",
          "type": "object",
          "required": [
            "template"
          ],
          "if": {
            "properties": {
              "template": {
                "const": "text"
              }
            }
          },
          "then": {
            "required": [
              "template",
              "reason"
            ]
          },
          "properties": {
            "template": {
              "description": "The replacement template.",
              "type": "string",
              "enum": [
                "text",
                "empty",
                "password-protected",
                "corrupted",
                "not-preservable",
                "not-convertable",
                "extracted-archive",
                "temporary-file"
              ]
            },
            "reason": {
              "description": "The reason why the file should be ignore, and the template text if template is set to 'text'.",
              "type": "string"
            }
          }
        },
        "ignore-warnings": {
          "description": "Warnings to ignore",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    }
  }
}